[
    {
        "id": 4,
        "slug": "lit-kullanarak-basit-bir-sayac-yapmak",
        "date": "23 Jul 2023 18:15:00 GMT",
        "title": "Lit Kullanarak Basit bir Saya√ß Yapmak",
        "body": "<h3 id=\"lit-i-import-edelim\">Lit&#39;i Import Edelim<\/h3>\r\n<p>Lit k\u00FCt\u00FCphanesinden gerekli \u015Feyleri import ederek ba\u015Flayal\u0131m.<\/p>\r\n<pre><code><span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script<\/span> <span class=\"hljs-attr\">type<\/span>=<span class=\"hljs-string\">\"module\"<\/span>&gt;<\/span><span class=\"actionscript\">\r\n    <span class=\"hljs-meta\"><span class=\"hljs-meta-keyword\">import<\/span> <\/span><\/span><\/span><span class=\"hljs-template-variable\">{ LitElement, html, css }<\/span><span class=\"xml\"><span class=\"javascript\"> <span class=\"hljs-keyword\">from<\/span> <span class=\"hljs-string\">\"https:\/\/cdn.jsdelivr.net\/gh\/lit\/dist@2\/core\/lit-core.min.js\"<\/span>;\r\n<\/span><span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">script<\/span>&gt;<\/span><\/span>\r\n<\/code><\/pre><h3 id=\"class-yazal-m\">Class&#39;\u0131 Yazal\u0131m<\/h3>\r\n<p>Component class&#39;\u0131n\u0131 a\u015Fa\u011F\u0131daki gibi yazal\u0131m.<\/p>\r\n<pre><code><span class=\"hljs-class\"><span class=\"hljs-keyword\">class<\/span> <span class=\"hljs-title\">Counter<\/span> <span class=\"hljs-keyword\">extends<\/span> <span class=\"hljs-title\">LitElement<\/span> <\/span>{\r\n    static properties = {};\r\n\r\n    static styles = css``;\r\n\r\n    constructor() {\r\n        <span class=\"hljs-keyword\">super<\/span>();\r\n    }\r\n\r\n    render() {\r\n        <span class=\"hljs-keyword\">return<\/span> html``;\r\n    }\r\n}\r\n<\/code><\/pre><h3 id=\"yeni-component-imizi-tan-mlayal-m\">Yeni Component&#39;imizi Tan\u0131mlayal\u0131m<\/h3>\r\n<p>\u0130stedi\u011Fimiz tag ismini vererek yeni component&#39;imizi DOM&#39;a tan\u0131tal\u0131m. Web component&#39;lerinin tag isminde tire olmak zorunda, o nedele tire eklemeyi unutmay\u0131n.<\/p>\r\n<pre><code>customElements.<span class=\"hljs-class\"><span class=\"hljs-keyword\">define<\/span><\/span>(<span class=\"hljs-string\">\"counter-component\"<\/span>, Counter);\r\n<\/code><\/pre><h3 id=\"state-imizi-tan-mlayal-m\">State&#39;imizi Tan\u0131mlayal\u0131m<\/h3>\r\n<p>Di\u011Fer UI framework&#39;lerinde yaz\u0131lan \u00E7o\u011Fu saya\u00E7ta oldu\u011Fu gibi say\u0131m\u0131z\u0131 state variable&#39;\u0131 olarak tan\u0131mlamam\u0131z gerekiyor. A\u015Fa\u011F\u0131daki key \/ value \u00E7iftini properties&#39;inize ekleyin.<\/p>\r\n<pre><code>...\r\n<span class=\"hljs-keyword\">static<\/span> properties = {\r\n    _count: {<span class=\"hljs-class\"><span class=\"hljs-keyword\">type<\/span>: <span class=\"hljs-title\">Number<\/span>},<\/span>\r\n};\r\n...\r\n<\/code><\/pre><p>Ba\u015Ftaki alttan \u00E7izgi bunun private property oldu\u011Funu g\u00F6steriyor. Yani parent component&#39;ten gelmiyor. Tamament bu component&#39;e \u00F6zg\u00FC bir property.<\/p>\r\n<p>\u015Eimdi de undefined olmas\u0131n\u0131 istemedi\u011Fimiz i\u00E7in say\u0131m\u0131z\u0131n ba\u015Flang\u0131\u00E7 de\u011Ferini tan\u0131mlamam\u0131z gerekiyor.<\/p>\r\n<pre><code>...\r\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">constructor<\/span><span class=\"hljs-params\">()<\/span> <span class=\"hljs-comment\">{\r\n    super();\r\n    this._count = 0;\r\n}<\/span>\r\n...<\/span>\r\n<\/code><\/pre><h3 id=\"say-y-ekranda-g-sterelim\">Say\u0131y\u0131 Ekranda G\u00F6sterelim<\/h3>\r\n<p>Markup&#39;\u0131m\u0131z\u0131 render metoduna ekliyoruz.<\/p>\r\n<pre><code>render() {\r\n    <span class=\"hljs-keyword\">return<\/span> html<span class=\"hljs-string\">`\r\n        &lt;p&gt;<span class=\"hljs-subst\">${<span class=\"hljs-keyword\">this<\/span>._count}<\/span>&lt;\/p&gt;\r\n    `<\/span>\r\n}\r\n<\/code><\/pre><p>B\u00F6ylece say\u0131n\u0131n mevcut de\u011Ferini (0) sayfada g\u00F6stermi\u015F oluyoruz.<\/p>\r\n<h3 id=\"d-me-markup-m-z-onclick-event-ine-ekleyelim\">D\u00FC\u011Fme Markup&#39;\u0131m\u0131z\u0131 Onclick Event&#39;ine Ekleyelim<\/h3>\r\n<p>\u015Eimdi de say\u0131m\u0131z\u0131 artt\u0131r\u0131p azaltmak i\u00E7in d\u00FC\u011Fmeler eklememiz gerekiyor. Lit&#39;e \u00F6zel @ syntax&#39;\u0131n\u0131 kullanarak event handler&#39;\u0131m\u0131z\u0131 d\u00FC\u011Fmelere bind ediyoruz.<\/p>\r\n<pre><code>...\r\n&lt;button\r\n    <span class=\"hljs-meta\">@click<\/span>=${() =&gt; <span class=\"hljs-keyword\">this<\/span>._count = <span class=\"hljs-keyword\">this<\/span>._count + <span class=\"hljs-number\">1<\/span>}\r\n&gt;\r\n    +\r\n&lt;\/button&gt;\r\n&lt;button\r\n    <span class=\"hljs-meta\">@click<\/span>=${() =&gt; <span class=\"hljs-keyword\">this<\/span>._count = <span class=\"hljs-keyword\">this<\/span>._count - <span class=\"hljs-number\">1<\/span>}\r\n&gt;\r\n    -\r\n&lt;\/button&gt;\r\n...\r\n<\/code><\/pre><p>Art\u0131k d\u00FC\u011Fmelere t\u0131klayarak ekranda g\u00F6r\u00FCnen say\u0131y\u0131 artt\u0131r\u0131p azaltabiliriz.<\/p>\r\n<h3 id=\"css-ekleyelim\">CSS Ekleyelim<\/h3>\r\n<p>Son olarak styles&#39;a biraz CSS ekliyoruz.<\/p>\r\n<pre><code><span class=\"hljs-keyword\">static<\/span> styles = css`\r\n    button {\r\n        <span class=\"hljs-built_in\">background<\/span>: <span class=\"hljs-built_in\">red<\/span>;\r\n        <span class=\"hljs-built_in\">color<\/span>: white;\r\n    }\r\n`\r\n<\/code><\/pre><h3 id=\"yeni-component-imizi-dom-da-kullanal-m\">Yeni Component&#39;imizi DOM&#39;da Kullanal\u0131m<\/h3>\r\n<p>Having defined our new web component, it is now time to use it in our DOM. Simply add the below tag where you&#39;d like to see the component.\r\nYeni web component&#39;imizi tan\u0131mlad\u0131\u011F\u0131m\u0131za g\u00F6re, art\u0131k DOM&#39;da kullanabiliriz. A\u015Fa\u011F\u0131daki tag&#39;\u0131 component&#39;in g\u00F6r\u00FCnmesini istedi\u011Finiz yere ekleyebilirsiniz.<\/p>\r\n<pre><code><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">body<\/span>&gt;<\/span>\r\n...\r\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">counter-component<\/span>&gt;<\/span><span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">counter-component<\/span>&gt;<\/span>\r\n...\r\n<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">body<\/span>&gt;<\/span>\r\n<\/code><\/pre><h3 id=\"kodun-tamam-\">Kodun Tamam\u0131<\/h3>\r\n<p>\u00C7al\u0131\u015Fan kod \u00F6rne\u011Fi \u015F\u00F6yle.<\/p>\r\n<pre><code><span class=\"hljs-meta\">&lt;!DOCTYPE html&gt;<\/span>\r\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">html<\/span> <span class=\"hljs-attr\">lang<\/span>=<span class=\"hljs-string\">\"en\"<\/span>&gt;<\/span>\r\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">head<\/span>&gt;<\/span>\r\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">title<\/span>&gt;<\/span>EO-UK Tutorial | How to Make a Simple Counter with Lit<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">title<\/span>&gt;<\/span>\r\n<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">head<\/span>&gt;<\/span>\r\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">body<\/span>&gt;<\/span>\r\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">counter-component<\/span>&gt;<\/span><span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">counter-component<\/span>&gt;<\/span>\r\n<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">body<\/span>&gt;<\/span>\r\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script<\/span> <span class=\"hljs-attr\">type<\/span>=<span class=\"hljs-string\">\"module\"<\/span>&gt;<\/span><span class=\"javascript\">\r\n    <span class=\"hljs-keyword\">import<\/span> { LitElement, html, css } <span class=\"hljs-keyword\">from<\/span> <span class=\"hljs-string\">\"https:\/\/cdn.jsdelivr.net\/gh\/lit\/dist@2\/core\/lit-core.min.js\"<\/span>;\r\n\r\n    <span class=\"hljs-class\"><span class=\"hljs-keyword\">class<\/span> <span class=\"hljs-title\">Counter<\/span> <span class=\"hljs-keyword\">extends<\/span> <span class=\"hljs-title\">LitElement<\/span> <\/span>{\r\n        <span class=\"hljs-keyword\">static<\/span> properties = {\r\n            <span class=\"hljs-attr\">_count<\/span>: {<span class=\"hljs-attr\">type<\/span>: <span class=\"hljs-built_in\">Number<\/span>},\r\n        };\r\n\r\n        <span class=\"hljs-keyword\">static<\/span> styles = css<span class=\"hljs-string\">`\r\n            button {\r\n                background: red;\r\n                color: white;\r\n            }\r\n        `<\/span>\r\n\r\n        <span class=\"hljs-keyword\">constructor<\/span>() {\r\n            <span class=\"hljs-keyword\">super<\/span>();\r\n            <span class=\"hljs-keyword\">this<\/span>._count = <span class=\"hljs-number\">0<\/span>;\r\n        }\r\n\r\n        render() {\r\n            <span class=\"hljs-keyword\">return<\/span> html<span class=\"hljs-string\">`\r\n                &lt;p&gt;<span class=\"hljs-subst\">${<span class=\"hljs-keyword\">this<\/span>._count}<\/span>&lt;\/p&gt;\r\n                &lt;button\r\n                    @click=<span class=\"hljs-subst\">${() =&gt; <span class=\"hljs-keyword\">this<\/span>._count = <span class=\"hljs-keyword\">this<\/span>._count + <span class=\"hljs-number\">1<\/span>}<\/span>\r\n                &gt;\r\n                    +\r\n                &lt;\/button&gt;\r\n                &lt;button\r\n                    @click=<span class=\"hljs-subst\">${() =&gt; <span class=\"hljs-keyword\">this<\/span>._count = <span class=\"hljs-keyword\">this<\/span>._count - <span class=\"hljs-number\">1<\/span>}<\/span>\r\n                &gt;\r\n                    -\r\n                &lt;\/button&gt;\r\n            `<\/span>\r\n        }\r\n    }\r\n    customElements.define(<span class=\"hljs-string\">\"counter-component\"<\/span>, Counter);\r\n<\/span><span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">script<\/span>&gt;<\/span>\r\n<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">html<\/span>&gt;<\/span>\r\n<\/code><\/pre>",
        "excerpt": "Lit kullanarak d√ºƒümelerle sayƒ±yƒ± arttƒ±rƒ±p azaltabileceƒüiniz bir saya√ß component'i yapmayƒ± √∂ƒürenin.",
        "image": "posts/lit.png"
    },
    {
        "id": 5,
        "slug": "lit-component-lerine-data-aktarmak",
        "date": "23 Jul 2023 19:23:00 GMT",
        "title": "Lit Component'lerine Data Aktarmak",
        "body": "<h2 id=\"lit-component-lerine-data-aktarmak\">Lit Component&#39;lerine Data Aktarmak<\/h2>\r\n<h3 id=\"child-component-i-tan-mlayal-m\">Child Component&#39;i Tan\u0131mlayal\u0131m<\/h3>\r\n<p>GroceryList ad\u0131nda bir component tan\u0131mlayarak ba\u015Flayal\u0131m. Bu component al\u0131\u015Fveri\u015F listesini property olarak al\u0131p, unordered list olarak ekranda g\u00F6sterecek.<\/p>\r\n<p>Properties&#39;e &quot;items&quot; state&#39;i ekliyoruz. Ba\u015F\u0131nda alttan \u00E7izgi yok, \u00E7\u00FCnk\u00FC bu property parent component&#39;ten al\u0131nan public bir property.<\/p>\r\n<p>Sonra da &quot;map&quot; metodunu kullanarak al\u0131\u015Fveri\u015F listesi array&#39;imizi render ediyoruz.<\/p>\r\n<pre><code><span class=\"hljs-class\"><span class=\"hljs-keyword\">class<\/span> <span class=\"hljs-title\">GroceryList<\/span> <span class=\"hljs-keyword\">extends<\/span> <span class=\"hljs-title\">LitElement<\/span> <\/span>{\r\n    static properties = {\r\n        items: {<span class=\"hljs-class\"><span class=\"hljs-keyword\">type<\/span><\/span>: <span class=\"hljs-type\">Array<\/span>},\r\n    }\r\n\r\n    constructor() {\r\n        <span class=\"hljs-keyword\">super<\/span>();\r\n    }\r\n\r\n    render() {\r\n        <span class=\"hljs-keyword\">return<\/span> html`\r\n            &lt;ul&gt;\r\n                ${<span class=\"hljs-keyword\">this<\/span>.items.map(item =&gt; html`&lt;li&gt;${item}&lt;\/li&gt;`)}\r\n            &lt;\/ul&gt;\r\n        `\r\n    }\r\n}\r\ncustomElements.define(<span class=\"hljs-string\">\"grocery-list\"<\/span>, <span class=\"hljs-type\">GroceryList<\/span>);\r\n<\/code><\/pre><h3 id=\"parent-tan-mlayal-m\">Parent&#39;\u0131 Tan\u0131mlayal\u0131m<\/h3>\r\n<p>\u015Eimdi al\u0131\u015Fveri\u015F listesini GroceryList component&#39;ine verecek parent component&#39;i tan\u0131mlayabiliriz.<\/p>\r\n<p>Data aktar\u0131m\u0131 s\u0131radan HTML element&#39;lerine attribute vermeye benziyor. Tek fark, attribute isminin ba\u015F\u0131nda nokta var. Bu sayede JS array&#39;ini referansla aktarabiliyoruz.<\/p>\r\n<p>Nokta opsiyonel. Alternatif olarak array&#39;in string kar\u015F\u0131l\u0131\u011F\u0131n\u0131 aktar\u0131p Lit&#39;in JS array&#39;ine \u00E7evirmesini sa\u011Flayabiliriz.<\/p>\r\n<pre><code><span class=\"hljs-class\"><span class=\"hljs-keyword\">class<\/span> <span class=\"hljs-title\">App<\/span> <span class=\"hljs-keyword\">extends<\/span> <span class=\"hljs-title\">LitElement<\/span> <\/span>{\r\n    constructor() {\r\n        <span class=\"hljs-keyword\">super<\/span>();\r\n    }\r\n\r\n    render() {\r\n        <span class=\"hljs-keyword\">return<\/span> html`\r\n            &lt;grocery-list\r\n                .items=${[\r\n                    <span class=\"hljs-string\">\"apple\"<\/span>,\r\n                    <span class=\"hljs-string\">\"cheese\"<\/span>,\r\n                    <span class=\"hljs-string\">\"milk\"<\/span>,\r\n                ]}\r\n            &gt;&lt;\/grocery-list&gt;\r\n        `\r\n    }\r\n}\r\ncustomElements.define(<span class=\"hljs-string\">\"app-component\"<\/span>, <span class=\"hljs-type\">App<\/span>);\r\n<\/code><\/pre><h3 id=\"kodun-tamam-\">Kodun Tamam\u0131<\/h3>\r\n<p>\u00C7al\u0131\u015Fan kod \u00F6rne\u011Fi \u015F\u00F6yle.<\/p>\r\n<pre><code><span class=\"hljs-meta\">&lt;!DOCTYPE html&gt;<\/span>\r\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">html<\/span> <span class=\"hljs-attr\">lang<\/span>=<span class=\"hljs-string\">\"en\"<\/span>&gt;<\/span>\r\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">head<\/span>&gt;<\/span>\r\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">title<\/span>&gt;<\/span>EO-UK Tutorial | How to Pass Data to Lit Components<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">title<\/span>&gt;<\/span>\r\n<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">head<\/span>&gt;<\/span>\r\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">body<\/span>&gt;<\/span>\r\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">app-component<\/span>&gt;<\/span><span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">app-component<\/span>&gt;<\/span>\r\n<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">body<\/span>&gt;<\/span>\r\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script<\/span> <span class=\"hljs-attr\">type<\/span>=<span class=\"hljs-string\">\"module\"<\/span>&gt;<\/span><span class=\"javascript\">\r\n    <span class=\"hljs-keyword\">import<\/span> { LitElement, html, css } <span class=\"hljs-keyword\">from<\/span> <span class=\"hljs-string\">\"https:\/\/cdn.jsdelivr.net\/gh\/lit\/dist@2\/core\/lit-core.min.js\"<\/span>;\r\n\r\n    <span class=\"hljs-class\"><span class=\"hljs-keyword\">class<\/span> <span class=\"hljs-title\">GroceryList<\/span> <span class=\"hljs-keyword\">extends<\/span> <span class=\"hljs-title\">LitElement<\/span> <\/span>{\r\n        <span class=\"hljs-keyword\">static<\/span> properties = {\r\n            <span class=\"hljs-attr\">items<\/span>: {<span class=\"hljs-attr\">type<\/span>: <span class=\"hljs-built_in\">Array<\/span>},\r\n        }\r\n\r\n        <span class=\"hljs-keyword\">constructor<\/span>() {\r\n            <span class=\"hljs-keyword\">super<\/span>();\r\n        }\r\n\r\n        render() {\r\n            <span class=\"hljs-keyword\">return<\/span> html<span class=\"hljs-string\">`\r\n                &lt;ul&gt;\r\n                    <span class=\"hljs-subst\">${<span class=\"hljs-keyword\">this<\/span>.items.map(item =&gt; html<span class=\"hljs-string\">`&lt;li&gt;<span class=\"hljs-subst\">${item}<\/span>&lt;\/li&gt;`<\/span>)}<\/span>\r\n                &lt;\/ul&gt;\r\n            `<\/span>\r\n        }\r\n    }\r\n    customElements.define(<span class=\"hljs-string\">\"grocery-list\"<\/span>, GroceryList);\r\n\r\n    <span class=\"hljs-class\"><span class=\"hljs-keyword\">class<\/span> <span class=\"hljs-title\">App<\/span> <span class=\"hljs-keyword\">extends<\/span> <span class=\"hljs-title\">LitElement<\/span> <\/span>{\r\n        <span class=\"hljs-keyword\">constructor<\/span>() {\r\n            <span class=\"hljs-keyword\">super<\/span>();\r\n        }\r\n\r\n        render() {\r\n            <span class=\"hljs-keyword\">return<\/span> html<span class=\"hljs-string\">`\r\n                &lt;grocery-list\r\n                    .items=<span class=\"hljs-subst\">${[\r\n                        <span class=\"hljs-string\">\"apple\"<\/span>,\r\n                        <span class=\"hljs-string\">\"cheese\"<\/span>,\r\n                        <span class=\"hljs-string\">\"milk\"<\/span>,\r\n                    ]}<\/span>\r\n                &gt;&lt;\/grocery-list&gt;\r\n            `<\/span>\r\n        }\r\n    }\r\n    customElements.define(<span class=\"hljs-string\">\"app-component\"<\/span>, App);\r\n<\/span><span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">script<\/span>&gt;<\/span>\r\n<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">html<\/span>&gt;<\/span>\r\n<\/code><\/pre>",
        "excerpt": "Lit'te parent component'ten child component'lere data aktarmayƒ± √∂ƒürenin.",
        "image": "posts/lit.png"
    }
]